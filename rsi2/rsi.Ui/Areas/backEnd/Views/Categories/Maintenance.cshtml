<!--
    view...........: Maintenance.cshtml
    local..........: ~/Areas/backEnd/Views/Categories/List.cshtml
    controller.....: Categories
    system.........: rsi
    descrição......: manutenção de categorias
    author.........: anselmolucas@gmail.com
    date...........: 18/jan/2017
    status.........: 80% ok
    pendências.....: falta inserir instruções de uso/help e revisão geral e pequenos detalhes
-->

@model rsi.Entities.Category
@using rsi.Apps

<div class="container-fluid">
    <div class="row">
        <div class="col-md-9">

            <div class="nav-tabs-custom">

                @Html.Partial("~/Areas/backEnd/Views/_partialViews/forms/_formsTop.cshtml")

                <div class="tab-content">
                    <div class="tab-pane active" id="tab_1-1">
                        <div class="box box-purple">
                            <br />
                            <div id="AdvertiserForm">
                                @using (Html.BeginForm("Maintenance", "Categories", FormMethod.Post, new { i = "commentForm", enctype = "multipart/form-data", @class = "form-horizontal", @id = "categoriesForm" }))
                                {
                                    <div class="form-horizontal">

                                        @Html.AntiForgeryToken()
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(model => model.Id)

                                        <div class="box-body">
                                            <fieldset>
                                                <div class="form-group">
                                                    <div class="col-sm-2 control-label">
                                                        @Html.LabelFor(model => model.Name)
                                                    </div>

                                                    <div class="col-sm-10">
                                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "nome da sub-categoria", @id = "name" } })
                                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <div class="col-sm-2 control-label">
                                                        @Html.LabelFor(model => model.Details)
                                                    </div>

                                                    <div class="col-sm-10">
                                                        @Html.EditorFor(model => model.Details, new { htmlAttributes = new { @class = "form-control", @placeholder = "detalhes", @id = "details" } })
                                                        @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <div class="col-sm-2 control-label">
                                                        @Html.LabelFor(model => model.FileName)
                                                    </div>

                                                    <div class="col-sm-10">
                                                        @Html.EditorFor(model => model.FileName, new { htmlAttributes = new { @class = "form-control", @placeholder = "arquivo de imagem", @readonly = true, @id = "filename" } })
                                                        @Html.ValidationMessageFor(model => model.FileName, "", new { @class = "text-danger" })
                                                    </div>

                                                </div>
                                            </fieldset>

                                            @if (ViewBag.FormHeaderAux["Operation"] == "a" || ViewBag.FormHeaderAux["Operation"] == "e")
                                            {
                                                <fieldset id="statusFormRadioButtons" class="form-group">
                                                    <div class="col-sm-2 control-label">
                                                        @Html.Label("status")
                                                    </div>

                                                    <div class="col-sm-10">
                                                        <div id="registerStatus_row">
                                                            @Html.RadioButtonFor(model => model.St, "on", new { htmlAttributes = new { @id = "st1" } })
                                                            <span>ativo</span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                                                            @Html.RadioButtonFor(model => model.St, "off", new { htmlAttributes = new { @id = "st2" } })
                                                            <span>inativo</span>
                                                            @Html.ValidationMessageFor(model => model.St, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </fieldset>
                                            }
                                            
                                        </div>

                                        <div class="box-footer">
                                           @Html.Partial("~/Areas/backEnd/Views/_partialViews/forms/_formsBottomAux.cshtml")
                                        </div>
                                    </div>
                                }
                            </div><!-- end form-->
                        </div>
                    </div>

                    <div class="tab-pane" id="tab_2-2">
                        @if (Model.Id > 0)
                        {
                            @*@Html.Action("_fileUpload", "Elements", new { id = Model.Id, tab = "Categories" })*@
                        }
                        else
                        {
                            <h2>adicionar imagem</h2>
                            <hr />
                            <h4>*** para ativar essa função é necessário criar um novo registro ou atualizar um já existente!</h4>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- display medias sideBar Right-->
        <div class="col-md-3">

            <div id="imageBox" class="box box-purple">
                <div class="box-header with-border">
                    <h3 class="box-title">imagem</h3>
                </div>
                <div class="box-body">
                    <div class="form-group">
                        @{
                            string _img = Functions.__displayIconFileName(Model.FileName, "Categories");
                            <img src="@Url.Content(_img)" class="img-thumbnail img-responsive" width="100%" />
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="modalDetailsCategory"></div><!-- div usada para abrir o modal -->


<script>
    /*************************************************************************
        formulário: Maintenance
        full path.: ~/Areas/backEnd/Views/Advertisers/Maintenance.cshtml
     ************************************************************************/
    //  1.1.1) funções anônimas

    //  + theBegin: desabilita a edição de registros de acordo com o valor da ViewBag.Status
    $(document).ready(function () {

        var _op = '@ViewBag.FormHeaderAux["Operation"]';

            if (_op == "v" || _op == "d") { // view ou delete

                //  + theBegin: desabilitando a edição
                    document.getElementById("name").disabled = true;
                    document.getElementById("details").disabled = true;             
                //  - theEnd: desabilitando a edição

            } else if (_op == "a" || _op == "e") {

                //  + theBegin: desabilitando a edição
                    document.getElementById("name").disabled = false;
                    document.getElementById("details").disabled = false;

                    if (_op == "a" || _op == "e") {
                        document.getElementById("saveFormButton").disabled = true;
                    }
                    else {
                        document.getElementById("saveFormButton").disabled = false;
                    }
                //  - theEnd: desabilitando a edição
        }
    });
    //  - theEnd: desabilita a edição de registros de acordo com o valor da ViewBag.Status

    /*
    habilitar o botão save quando o formulário for alterado
*/
    $("#categoriesForm").change(function () {
        document.getElementById("saveFormButton").disabled = false;
    })

    /*=============================================================================================
    *** function: resetForm() ***
    finalidade: resetar o formulário e disabilitar o botão save
=============================================================================================*/
    function resetForm() {

        console.log("******** resetForm no categories ********");
        document.getElementById("categoriesForm").reset();
        document.getElementById("saveFormButton").disabled = true;

    }

    /*=============================================================================================
    *** function: advertiserView2() ***
    finalidade: modal pra visualizar o anunciante
    http://www.linhadecodigo.com.br/artigo/3686/aspnet-mvc-e-bootstrap-exibindo-views-modais.aspx
=============================================================================================*/
    function categoryView(__categoryId) {
        //event.preventDefault();
        console.log("******** chamando o modal ***********");
        console.log("__categoryId: " + __categoryId);
        $("#modalDetailsCategory").load("/backEnd/Categories/_modalView?__categoryId=" + __categoryId, function () {
            $("#modalDetailsCategory").modal();
            //    $("#modalAdvertiserView2323").modal("show");
        })

    }
</script>

