@model rsi.ViewModels.PieChart_slices

<div class="box box-success">
    <div class="box-header with-border">
        @{ 
            string _thisMonth = System.DateTime.Now.ToString("MMM");
            string _lastMonth = rsi.Apps.Functions.__lastMonth().ToString("MMM");
        }
        <h3 class="box-title">views por anunciante - @_thisMonth/@_lastMonth</h3>
        <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                <i class="fa fa-minus"></i>
            </button>
            <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
        </div>
    </div>
    <div class="box-body">
        <div class="chart">
            <canvas id="barChart" style="height:330px"></canvas>
        </div>
        <br />
        <div class="panel panel-default">
            <div class="panel-body">
                <table class="table table-hover table-striped">
                    <thead>
                        <tr>
                            <th>anunciantes</th>
                            <th><i class="glyphicon glyphicon-stop" style="color:rgba(210, 214, 222, 1);"></i> @_lastMonth</th>
                            <th><i class="glyphicon glyphicon-stop" style="color:rgba(60,141,188,0.9);"></i> @_thisMonth (atual)</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><a href="#" class="detailsAdvertiserytr168" role="button" data-advertiserId="@Model.AdvertiserId_slice1">@Model.AdvertiserName_slice1</a></td>
                            <td>@ViewBag.Vds_mounthLast.TotalViews_slice1</td>
                            <td>@Model.TotalViews_slice1</td>
                        </tr>
                        <tr>
                            <td><a href="#" class="detailsAdvertiserytr168" role="button" data-advertiserId="@Model.AdvertiserId_slice2">@Model.AdvertiserName_slice2</a></td>
                            <td>@ViewBag.Vds_mounthLast.TotalViews_slice2</td>
                            <td>@Model.TotalViews_slice2</td>
                        </tr>
                        <tr>
                            <td><a href="#" class="detailsAdvertiserytr168" role="button" data-advertiserId="@Model.AdvertiserId_slice3">@Model.AdvertiserName_slice3</a></td>
                            <td>@ViewBag.Vds_mounthLast.TotalViews_slice3</td>
                            <td>@Model.TotalViews_slice3</td>
                        </tr>
                        <tr>
                            <td><a href="#" class="detailsAdvertiserytr168" role="button" data-advertiserId="@Model.AdvertiserId_slice4">@Model.AdvertiserName_slice4</a></td>
                            <td>@ViewBag.Vds_mounthLast.TotalViews_slice4</td>
                            <td>@Model.TotalViews_slice4</td>
                        </tr>
                        <tr>
                            <td><a href="#" class="detailsAdvertiserytr168" role="button" data-advertiserId="@Model.AdvertiserId_slice5">@Model.AdvertiserName_slice5</a></td>
                            <td>@ViewBag.Vds_mounthLast.TotalViews_slice5</td>
                            <td>@Model.TotalViews_slice5</td>
                        </tr>
                        <tr>
                            <td>demais anunciantes</td>
                            <td>@ViewBag.Vds_mounthLast.TotalViews_remainingSlices</td>
                            <td>@Model.TotalViews_remainingSlices</td>
                        </tr>
                        @{
                            int _viewsThisMonth = Model.TotalViews_slice1 + Model.TotalViews_slice2 + Model.TotalViews_slice3 + Model.TotalViews_slice4 + Model.TotalViews_slice5 + Model.TotalViews_remainingSlices;
                            int _viewsLastMonth = ViewBag.Vds_mounthLast.TotalViews_slice1 + ViewBag.Vds_mounthLast.TotalViews_slice2 + ViewBag.Vds_mounthLast.TotalViews_slice3 + ViewBag.Vds_mounthLast.TotalViews_slice4 + ViewBag.Vds_mounthLast.TotalViews_slice5 + ViewBag.Vds_mounthLast.TotalViews_remainingSlices;
                        }
                        <tr>
                            <td><b>totais</b></td>
                            <td><b>@_viewsLastMonth</b></td>
                            <td><b>@_viewsThisMonth</b></td>
                        </tr>
                    </tbody>
                </table>                  
            </div>           
        </div>
    </div>
</div>


<script>
    $(function () {
        //-------------
        //- LINE CHART -
        //--------------
        //Create the line chart
        var barChartData = {
            type: 'bar',
            labels: ["@Model.AdvertiserName_slice1", "@Model.AdvertiserName_slice2", "@Model.AdvertiserName_slice3", "@Model.AdvertiserName_slice4", "@Model.AdvertiserName_slice5", "restantes"],
            datasets: [
              {
                  label: "mês anterior",
                  fillColor: "rgba(210, 214, 222, 1)",
                  strokeColor: "rgba(210, 214, 222, 1)",
                  pointColor: "rgba(210, 214, 222, 1)",
                  pointStrokeColor: "#c1c7d1",
                  pointHighlightFill: "#fff",
                  pointHighlightStroke: "rgba(220,220,220,1)",
                  //data: [65, 59, 80, 30, 56, 55]
                  data: [@ViewBag.Vds_mounthLast.TotalViews_slice1, @ViewBag.Vds_mounthLast.TotalViews_slice2, @ViewBag.Vds_mounthLast.TotalViews_slice3, @ViewBag.Vds_mounthLast.TotalViews_slice4, @ViewBag.Vds_mounthLast.TotalViews_slice5, @ViewBag.Vds_mounthLast.TotalViews_remainingSlices]
              },
              {
                  label: "mês atual",
                  fillColor: "rgba(60,141,188,0.9)",
                  strokeColor: "rgba(60,141,188,0.8)",
                  pointColor: "#3b8bba",
                  pointStrokeColor: "rgba(60,141,188,1)",
                  pointHighlightFill: "#fff",
                  pointHighlightStroke: "rgba(60,141,188,1)",
                  //data: [65, 59, 80, 30, 56, 55]
                  data: [@Model.TotalViews_slice1, @Model.TotalViews_slice2, @Model.TotalViews_slice3, @Model.TotalViews_slice4, @Model.TotalViews_slice5, @Model.TotalViews_remainingSlices]
              }
            ]
        };

        var barChartOptions = {
            //Boolean - If we should show the scale at all
            showScale: true,
            //Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: true,
            //String - Colour of the grid lines
            scaleGridLineColor: "rgba(0,0,0,.05)",
            //Number - Width of the grid lines
            scaleGridLineWidth: 1,
            //Boolean - Whether to show horizontal lines (except X axis)
            scaleShowHorizontalLines: true,
            //Boolean - Whether to show vertical lines (except Y axis)
            scaleShowVerticalLines: true,
            //Boolean - Whether the line is curved between points
            bezierCurve: true,
            //Number - Tension of the bezier curve between points
            bezierCurveTension: 0.3,
            //Boolean - Whether to show a dot for each point
            pointDot: false,
            //Number - Radius of each point dot in pixels
            pointDotRadius: 4,
            //Number - Pixel width of point dot stroke
            pointDotStrokeWidth: 1,
            //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
            pointHitDetectionRadius: 20,
            //Boolean - Whether to show a stroke for datasets
            datasetStroke: true,
            //Number - Pixel width of dataset stroke
            datasetStrokeWidth: 2,
            //Boolean - Whether to fill the dataset with a color
            datasetFill: true,
            //String - A legend template
            legend: true,
            legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>",
            //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
            maintainAspectRatio: true,
            //Boolean - whether to make the chart responsive to window resizing
            responsive: true
        };

        var barChartCanvas = $("#barChart").get(0).getContext("2d");
        var barChart = new Chart(barChartCanvas);

        barChartOptions.datasetFill = false;
        barChart.Bar(barChartData, barChartOptions);
    });
</script>
