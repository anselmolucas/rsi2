@model rsi.Entities.AdvertiserDetails.Media
@using rsi.Entities.configurations
@using rsi.Apps

<div class="modal-dialog">
    <div class="modal-content ">
        <div class="modal-header">
            <a href="" type="button" class="close linkum" data-dismiss="modal" aria-hidden="true">
                ×
            </a>
            <h3 class="modal-title" id="myModalLabel">
                @{
                    string _stx = "";

                    if (Model.Id < 1)
                    {
                        _stx = "glyphicon glyphicon-exclamation-sign";
                    }
                    else if (Model.St == rsi.Entities.status.off)
                    {
                        _stx = "glyphicon glyphicon-thumbs-down text-danger";
                    }
                    else if (Model.St == rsi.Entities.status.on)
                    {
                        _stx = "glyphicon glyphicon-thumbs-up text-primary";
                    }
                    else
                    {
                        _stx = "glyphicon glyphicon-exclamation-sign";
                    }

                    string _title = "mídias  " + (Model.Id > 0 ? "#" + Model.Id : " ") + "  (" + ViewBag.OperationTitle + ")";
                }

                <i class="fa fa-th"></i>&nbsp;&nbsp;#&nbsp;&nbsp;@ViewBag.AdvertiserObj.Id - @ViewBag.AdvertiserObj.Name
            </h3>
        </div>

        <div class="modal-body">

            <div class="nav-tabs-custom">
                <ul class="nav nav-tabs pull-right">
                    <li class="active"><a href="#tab_1-1Modal" data-toggle="tab">dados</a></li>
                    <li><a href="#tab_2-2Modal" data-toggle="tab">imagem</a></li>
                    <li class="pull-left header">
                        <h5><i class="@_stx"></i>&nbsp;  @_title</h5>
                    </li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane active" id="tab_1-1Modal">
                        <div id="AdMediasForm">
                            @using (Html.BeginForm("_modalView", "Advertisers_Medias", FormMethod.Post, new { i = "commentForm", enctype = "multipart/form-data", @class = "form-horizontal", @id = "mediasFormInModal" }))
                            {
                                <div class="form-horizontal">
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model.Id)
                                    @Html.HiddenFor(model => model.AdvertiserId)
                                    @Html.HiddenFor(model => model.FileName)

                                    <div class="form-group">
                                        <div class="col-sm-3 control-label">
                                            @Html.LabelFor(model => model.DisplayOrder)
                                        </div>

                                        <div class="col-sm-9">
                                            @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control", @placeholder = "ordem", @id = "order_inModal" } })
                                            @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-sm-3 control-label">
                                            @Html.LabelFor(model => model.Type)
                                        </div>

                                        <div class="col-sm-9">
                                            @Html.EnumDropDownListFor(model => model.Type, "qual o tipo?", new { @class = "form-control", @id = "type_inModal" })
                                            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-sm-3 control-label">
                                            @Html.LabelFor(model => model.Title)
                                        </div>

                                        <div class="col-sm-9">
                                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = "título / nome", @id = "title_inModal" } })
                                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-sm-3 control-label">
                                            @Html.LabelFor(model => model.Description)
                                        </div>

                                        <div class="col-sm-9">
                                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "descrição", @id = "description_inModal" } })
                                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    
                                    <div id="mediaFileNameDivInModal" class="form-group">
                                        <div class="col-sm-3 control-label">
                                            @Html.LabelFor(model => model.FileName)
                                        </div>

                                        <div class="col-sm-9">
                                            @Html.EditorFor(model => model.FileName, new { htmlAttributes = new { @class = "form-control", @placeholder = "(arquivo da mídia)", @readonly = true} })
                                            @Html.ValidationMessageFor(model => model.FileName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div id="urlDivInModal" class="form-group">
                                        <div class="col-sm-3 control-label">
                                            @Html.LabelFor(model => model.URL)
                                        </div>

                                        <div class="col-sm-9">
                                            @Html.TextAreaFor(model => model.URL, new { @class = "form-control", @rows = 5, @id = "url_inModal", @placeholder = "url (endereço na internet)" })                                                                                        
                                            @Html.ValidationMessageFor(model => model.URL, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div id="statusWithRadioButton_inModal" class="form-group">
                                        <div class="col-sm-3 control-label">
                                            @Html.Label("status")
                                        </div>

                                        <div class="col-sm-9">
                                            <div id="registerStatus_row">
                                                @Html.RadioButtonFor(model => model.St, "on", new { htmlAttributes = new { @id = "st1_inModal" } })
                                                <span>ativo</span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                                                @Html.RadioButtonFor(model => model.St, "off", new { htmlAttributes = new { @id = "st2_inModal" } })
                                                <span>inativo</span>
                                                @Html.ValidationMessageFor(model => model.St, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <br /><br />
                                    <div class="form-group">
                                        <div class="col-sm-6">
                                            <div class="btn-group btn-group-lg" role="group" aria-label="...">
                                                <button id="returnButton_inModal" type="button" class="btn btn-default" data-dismiss="modal" aria-hidden="true" title="fechar janela"><span class="glyphicon glyphicon-off"></span></button>
                                                <button id="resetButton_inModal" type="reset" class="btn btn-default" title="ignorar alterações"><span class="glyphicon glyphicon-refresh"></span></button>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="btn-group btn-group-lg pull-right" role="group" aria-label="...">
                                                <button id="saveButton_inModal345" type="submit" name="operation" value="save" class="btn btn-primary submitButton" data-jsonUrl="/SubCategories/jsonMaintenance" title="salvar alterações"><span class="glyphicon glyphicon-floppy-disk"></span></button>
                                                <button id="deleteButton_inModal" onclick="Mudarestado('deleteRegisterConfirm_inModal')" type="button" class="btn btn-danger" title="excluir o registro"><span class="glyphicon glyphicon-trash"></span></button>
                                            </div>
                                        </div>

                                        <!-- div escondida para confirmação da exclusão do registro -->
                                        <div id="deleteRegisterConfirm_inModal" class="col-sm-12" style="display:none;">

                                            <div class="form-group">

                                                <h2 style="text-align:center;color:red;">*** confirmar exclusão ***</h2>

                                                <div class="col-md-6">
                                                    <div class="pull-left" role="group">
                                                        <button id="deleteButton_inModal" onclick="Mudarestado('deleteRegisterConfirm_inModal')" type="button" class="btn btn-default" title="retornar ao anunciante (fecha janela)">desistir</button>
                                                    </div>
                                                </div>

                                                <div class="col-md-6">
                                                    <div class="pull-right" role="group">
                                                        <button type="submit" class="btn btn-danger" name="operation" value="delete" title="excluir o registro"><span class="glyphicon glyphicon-trash"></span> excluir registro !!!</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            }<!-- fim do formulário -->
                        </div>

                    </div>

                    <div class="tab-pane" id="tab_2-2Modal">
                        @if (Model.Id > 0)
                        {
                            @Html.Action("_fileUpload", "Elements", new { id = Model.Id, tab = "Medias", imageId = "imageInModal"})
                        }
                        else
                        {
                            <h2>adicionar imagem</h2>
                            <hr />
                            <h4>*** para ativar essa função é necessário criar um novo registro ou atualizar um já existente!</h4>
                        }  
                    </div>
                </div>
            </div>

        </div>
        <div class="modal-footer"></div>
    </div>
</div>
<script src="~/assets/stylesAndScripts/this/myScripts.js"></script>

<script>
    $(document).ready(function () {

        mediaTypeChange();

        var _op = "@ViewBag.Operation";

        if (_op == "v" || _op == "d") { // view ou delete

            //  + theBegin: desabilitando a edição
                // fields
                document.getElementById("order_inModal").disabled = true;
                document.getElementById("type_inModal").disabled = true;
                document.getElementById("title_inModal").disabled = true;
                document.getElementById("description_inModal").disabled = true;
                document.getElementById("url_inModal").disabled = true; //Desabilitando
            //  - theEnd: desabilitando a edição

            //  + theBegin: esconder trechos do formulário
                console.log("desativar inputFile");
                $('#inputFile_inModal').hide();                 // esconder o botão de upload de imagem
                $('#inputButtonLabel_img').hide();                 // esconder o botão de upload de imagem
                $('#resetButton_inModal').hide();                 // esconder o botão de upload de imagem
                $('#saveButton_inModal345').hide();                 // esconder o botão de upload de imagem
                $('#resetButton_img').hide();                   // esconder o botão de reset
                $('#saveButton_img').hide();                    // esconder o botão de salvar
                if (_op == "d") { // delete
                    $('#deleteButton_inModal').show();
                }
                else {
                    $('#deleteButton_inModal').hide();
                }

                $('#statusWithRadioButton_inModal').hide(); // esconder os radios bottons de mudança do status do registro
                mediaTypeChange();
            //  - theEnd: esconder trechos do formulário

        } else {
            $('#saveButton_inModal345').disabled = false;

            if (_op == "a") { // add
                $('#deleteButton_inModal').hide();
                $('#displayMedia').hide();
                $('#inputFile_inModal').hide();
                $('#deleteButton_inModal').disabled = true;
               
            }
            else {
                $('#deleteButton_inModal').show();
                $('#displayMedia').show();
                $('#inputFile_inModal').show();
                mediaTypeChange();
            }
            $('#statusWithRadioButton_inModal').show(); // exibir os radios bottons de mudança do status do registro
        }
    });
    //  - theEnd: desabilita a edição de registros de acordo com o valor da ViewBag.Status

    //  + theBegin: invoca a função mediaTypeChange(), caso o dropDownList com os tipos de mídia seja alterado
        $("#type_inModal").change(function () {
            var _op = "@ViewBag.Operation";
            mediaTypeChange();
        })
    //  - theEnd: invoca a função mediaTypeChange(), caso o dropDownList com os tipos de mídia seja alterado

    
    $("#mediasFormInModal :input").change(function () {
        console.log("formulário alterado");
        $('#saveButton_inModal345').disabled = false;
    });

    //  + theBegin: caso ocorra alguma alteração na input para upload de arquivos, essa função será executada
        //$("#__file").change(function () {
        //    readURL(this); // executa a função que atualiza o conteúdo da imagem com o arquivo no input
        //});
    //  - theBegin: caso ocorra alguma alteração na input para upload de arquivos, essa função será executada

        function mediaTypeChange() {
            var _dropdownlist_selected = $('#type_inModal option:selected').text();            
            // se imagem...
            if (_dropdownlist_selected == "logo" || _dropdownlist_selected == "image" || _dropdownlist_selected == "mainImage" || _dropdownlist_selected == "thumbnail" || _dropdownlist_selected == "slider" || _dropdownlist_selected == "gallery" || _dropdownlist_selected == "icon") {
                console.log("esconder a url");
                $('#urlDivInModal').hide();
                $('#mediaFileNameDivInModal').show();
            }
            else if (_dropdownlist_selected == "youtube" || _dropdownlist_selected == "vimeo" || _dropdownlist_selected == "html" || _dropdownlist_selected == "googleMaps" || _dropdownlist_selected == "site" || _dropdownlist_selected == "soundCloud" || _dropdownlist_selected == "url") {
                $('#urlDivInModal').show();
                $('#mediaFileNameDivInModal').hide();
            }
        }
</script>

<style>
    /* Esconde o input */
    input[type='file'] {
        display: none;
    }

    /* Aparência que terá o seletor de arquivo */
    #inputButtonLabel_img {
        background-color: #666;
        border-radius: 5px;
        color: #fff;
        cursor: pointer;
        margin: 10px;
        padding: 6px 20px;
    }
</style>