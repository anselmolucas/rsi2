@model rsi.ViewModels.fileUpload
@using rsi.Apps

<div class="panel panel-default">

    <div class="panel-body">
        <div class="col-md-12">
            @{
                    string _img = Model.fileName;//!string.IsNullOrEmpty(ViewBag.FileImage) ? ViewBag.FileImagePath + ViewBag.FileImage : rsi.Entities.configurations.theSetup.noImage_path;

                    <div class="pull-right">
                    <img id="imageInModal" src="@Url.Content(_img)" class="img-thumbnail img-responsive" width="100" />
                </div>
            }

            <p>por gentileza, selecione a imagem desejada...</p>

            <br /><br /><br />
            @using (Html.BeginForm("_fileUpload", "Displays_AdMedias", FormMethod.Post, new { i = "commentForm", enctype = "multipart/form-data", @class = "form-horizontal" }))
            {
                <div class="form-horizontal">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.tableRecordId)
                    @Html.HiddenFor(model => model.table)
                    @Html.HiddenFor(model => model.fileName)
                    <input hidden name="_displaysId" value="@ViewBag.DisplaysId" />

                    <div class="form-group">
                        <div class="col-sm-2 control-label">
                            @if (!String.IsNullOrEmpty(Model.fileName))
                            {
                                @Html.Label("substituir arquivo de mídia")
                            }
                            else
                            {
                                @Html.Label("inserir arquivo arquivo de mídia")
                            }
                        </div>

                        <div class="col-sm-10">
                            @*<label id="inputFileTextInModal" for='__file'>Selecionar um arquivo &#187;</label>*@
                            <input type="file" id="__imageFileInModal" name="__imageFileInModal" class="form-control">
                            <p class="help-block">você pode importar imagens nos formatos ".jpg" e ".png"</p>
                        </div>
                    </div>

                    <br /><br />
                    <div class="form-group">
                        <div class="col-sm-6">
                            <div class="btn-group btn-group-lg" role="group" aria-label="...">
                                @{
                                    string _imgActual = Functions.__displayIconFileName(Model.fileName, ViewBag.Tab);
                                }
                                <button id="resetButton_inModal2" onclick="resetImagFileUploadInModal('@_imgActual')" type="button" class="btn btn-default" title="ignorar alterações"><span class="glyphicon glyphicon-refresh"></span></button>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="btn-group btn-group-lg pull-right" role="group" aria-label="...">
                                <button id="saveButton_inModal2" type="submit" name="operation" value="save" class="btn btn-primary submitButton" title="salvar alterações"><span class="glyphicon glyphicon-floppy-disk"></span></button>
                            </div>
                        </div>
                    </div>
                </div>
            }<!-- fim do formulário -->
        </div>
    </div>
</div>

<script>

    // fonte: http://stackoverflow.com/questions/4459379/preview-an-image-before-it-is-uploaded
    $("#__imageFileInModal").change(function () {
        document.getElementById("saveButton_inModal").disabled = false;
        document.getElementById("resetButton_inModal").disabled = false;

        readImageURL(this);
    });

    $(document).ready(function () {
        document.getElementById("saveButton_inModal").disabled = true;
        document.getElementById("resetButton_inModal").disabled = true;
    })

    function readImageURL(input) {

        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {

                $('#imageInModal').attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }
    /*  
    function..: resetImagFileUploadInModal()
    objective.: caso o botão de reset (de imagem) seja acionado, retorna a imagem original do registro
    parameters: __iconFileName - imagem com o path da imagem atualmente relacionada ao registro

    + theBegin: resetImagFileUploadInModal() */
        function resetImagFileUploadInModal(__iconFileName) {
            
            var _img = __iconFileName.replace(/~/g, "../../..");
            $('#imageInModal').attr('src', _img);
            document.getElementById("saveButton_inModal2").disabled = true;
        }
    //  - theEnd: resetImagFileUpload()
</script>
